diff --git a/CMakeLists.txt b/CMakeLists.txt
index ef0ee42..1a955fe 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -17,20 +17,22 @@ option( INTEL_MIC        "cross compile for intel xeon phi")
 option( INSTALL_PROFILES "install environment variable settings to /etc/profile.d" OFF )
 option( USE_CCACHE       "use ccache")
 option( USE_INTERNAL_TCL "Compile tcl files into the code and don't install them" ON)
+option( BUILD_WITH_CONDA "set this to on if the library is compiled with conda-buid" OFF)
+option( DYNAMIC_LINK_PYTHON "set this to OFF for static linking to python" OFF)
 
 option( USE_SUPERBUILD       "use ccache" ON)
 
 set(CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH}" "${CMAKE_CURRENT_SOURCE_DIR}/cmake/cmake_modules")
 
-if(APPLE)
+if(APPLE AND NOT BUILD_WITH_CONDA)
   set(INSTALL_DIR_DEFAULT /Applications/Netgen.app)
-else(APPLE)
+else(APPLE AND NOT BUILD_WITH_CONDA)
   if(WIN32)
     set(INSTALL_DIR_DEFAULT "C:/netgen")
   else(WIN32)
     set(INSTALL_DIR_DEFAULT /opt/netgen)
   endif(WIN32)
-endif(APPLE)
+endif(APPLE AND NOT BUILD_WITH_CONDA)
 
 if(INSTALL_DIR)
   message(WARNING "INSTALL_DIR is deprecated, use CMAKE_INSTALL_PREFIX instead")
@@ -111,14 +113,17 @@ set(CMAKE_INCLUDE_CURRENT_DIR ON)
 if(USE_PYTHON)
     find_package(PythonInterp 3 REQUIRED)
     find_package(PythonLibs 3 REQUIRED)
-
-    execute_process(COMMAND ${PYTHON_EXECUTABLE} -c "from distutils.sysconfig import get_python_lib; print(get_python_lib(1,0,''))" OUTPUT_VARIABLE PYTHON_PACKAGES_INSTALL_DIR OUTPUT_STRIP_TRAILING_WHITESPACE)
+    if(BUILD_WITH_CONDA)
+      execute_process(COMMAND ${PYTHON_EXECUTABLE} -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())" OUTPUT_VARIABLE PYTHON_PACKAGES_INSTALL_DIR OUTPUT_STRIP_TRAILING_WHITESPACE)
+    else(BUILD_WITH_CONDA)
+      execute_process(COMMAND ${PYTHON_EXECUTABLE} -c "from distutils.sysconfig import get_python_lib; print(get_python_lib(1,0,''))" OUTPUT_VARIABLE PYTHON_PACKAGES_INSTALL_DIR OUTPUT_STRIP_TRAILING_WHITESPACE)
+    endif(BUILD_WITH_CONDA)  
     file(TO_CMAKE_PATH ${PYTHON_PACKAGES_INSTALL_DIR} PYTHON_PACKAGES_INSTALL_DIR)
 endif(USE_PYTHON)
 
 set(NG_INSTALL_SUFFIX netgen CACHE STRING "Suffix appended to install directories (project name)")
 
-if(APPLE)
+if(APPLE AND NOT BUILD_WITH_CONDA)
   set(NG_INSTALL_DIR_BIN_DEFAULT Contents/MacOS)
   set(NG_INSTALL_DIR_LIB_DEFAULT Contents/MacOS)
   set(NG_INSTALL_DIR_CMAKE_DEFAULT Contents/Resources/CMake)
@@ -127,7 +132,7 @@ if(APPLE)
   set(NG_INSTALL_DIR_INCLUDE_DEFAULT Contents/Resources/include)
 
   set(NG_RPATH_TOKEN "@loader_path")
-else(APPLE)
+else(APPLE ADN NOT BUILD_WITH_CONDA)
   set(NG_INSTALL_DIR_BIN_DEFAULT bin)
   set(NG_INSTALL_DIR_LIB_DEFAULT lib)
   if(WIN32)
@@ -140,7 +145,7 @@ else(APPLE)
   set(NG_INSTALL_DIR_INCLUDE_DEFAULT include)
 
   set(NG_RPATH_TOKEN "\$ORIGIN")
-endif(APPLE)
+endif(APPLE AND NOT BUILD_WITH_CONDA)
 
 set(NG_INSTALL_DIR_PYTHON ${NG_INSTALL_DIR_PYTHON_DEFAULT} CACHE STRING "Install directory for Python files")
 set(NG_INSTALL_DIR_BIN ${NG_INSTALL_DIR_BIN_DEFAULT} CACHE STRING "Install directory for executables")
@@ -257,12 +262,17 @@ endif (USE_GUI)
 #######################################################################
 if (USE_PYTHON)
     add_definitions(-DNG_PYTHON)
-    find_path(PYBIND_INCLUDE_DIR pybind11/pybind11.h HINTS ${PYTHON_INCLUDE_DIR})
-    if( PYBIND_INCLUDE_DIR )
-        message(STATUS "Found Pybind11: ${PYBIND_INCLUDE_DIR}")
-    else( PYBIND_INCLUDE_DIR )
-        message(FATAL_ERROR "Could NOT find pybind11!")
-    endif( PYBIND_INCLUDE_DIR )
+    if(BUILD_WITH_CONDA)
+        find_package(pybind11 REQUIRED)
+        set(PYBIND_INCLUDE_DIR PYBIND11_INCLUDE_DIR)
+    else(BUILD_WITH_CONDA)
+      find_path(PYBIND_INCLUDE_DIR pybind11/pybind11.h HINTS ${PYTHON_INCLUDE_DIR})
+      if( PYBIND_INCLUDE_DIR )
+          message(STATUS "Found Pybind11: ${PYBIND_INCLUDE_DIR}")
+      else( PYBIND_INCLUDE_DIR )
+          message(FATAL_ERROR "Could NOT find pybind11!")
+      endif( PYBIND_INCLUDE_DIR )
+    endif(BUILD_WITH_CONDA)
 
     include_directories(${PYBIND_INCLUDE_DIR})
     include_directories(${PYTHON_INCLUDE_DIRS})
@@ -392,7 +402,7 @@ if(UNIX)
     endif(temp)
 endif(UNIX)
 
-if(APPLE)
+if(APPLE AND NOT BUILD_WITH_CONDA)
     # create some auxiliary files
     set(mac_startup ${CMAKE_CURRENT_BINARY_DIR}/startup.sh)
     file(WRITE ${mac_startup} "\
@@ -437,7 +447,7 @@ open -a /Applications/Utilities/Terminal.app $Netgen_MACOS/startup.sh
     install(FILES ${mac_plist} DESTINATION ${NG_INSTALL_DIR_BIN}/../)
     install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/netgen.icns DESTINATION ${NG_INSTALL_DIR_RES}/../ RENAME Netgen.icns)
 
-endif(APPLE)
+endif(APPLE AND BUILD_WITH_CONDA)
 
 if(NOT APPLE)
   include(CPack) 
diff --git a/libsrc/csg/CMakeLists.txt b/libsrc/csg/CMakeLists.txt
index 224a48e..7e99a4e 100644
--- a/libsrc/csg/CMakeLists.txt
+++ b/libsrc/csg/CMakeLists.txt
@@ -12,8 +12,10 @@ if(APPLE)
 endif(APPLE)
 
 if(NOT WIN32)
-    target_link_libraries(csg mesh ${PYTHON_LIBRARIES})
-    target_link_libraries(csg ${PYTHON_LIBRARIES})
+    target_link_libraries(csg PUBLIC mesh)
+    if(DYNAMIC_LINK_PYTHON)
+      target_link_libraries(csg PUBLIC ${PYTHON_LIBRARIES})
+    endif(DYNAMIC_LINK_PYTHON)
     install( TARGETS csg ${NG_INSTALL_DIR})
 endif(NOT WIN32)
 
diff --git a/libsrc/geom2d/CMakeLists.txt b/libsrc/geom2d/CMakeLists.txt
index 754c79f..f03d0c6 100644
--- a/libsrc/geom2d/CMakeLists.txt
+++ b/libsrc/geom2d/CMakeLists.txt
@@ -5,7 +5,10 @@ if(APPLE)
 endif(APPLE)
 
 if(NOT WIN32)
-    target_link_libraries(geom2d mesh ${PYTHON_LIBRARIES})
+    target_link_libraries(geom2d mesh)
+    if(DYNAMIC_LINK_PYTHON)
+      target_link_libraries(geom2d ${PYTHON_LIBRARIES})
+    endif(DYNAMIC_LINK_PYTHON)
     install( TARGETS geom2d ${NG_INSTALL_DIR})
 endif(NOT WIN32)
 
diff --git a/libsrc/interface/CMakeLists.txt b/libsrc/interface/CMakeLists.txt
index ef52c30..cb460fa 100644
--- a/libsrc/interface/CMakeLists.txt
+++ b/libsrc/interface/CMakeLists.txt
@@ -9,9 +9,7 @@ add_library(interface ${NG_LIB_TYPE}
 
 if(NOT WIN32)
     target_link_libraries(interface mesh csg geom2d)
-    if(USE_GUI)
-        target_link_libraries(interface visual)
-    endif(USE_GUI)
+    target_link_libraries(interface visual)
     install( TARGETS interface ${NG_INSTALL_DIR})
 endif(NOT WIN32)
 
diff --git a/libsrc/meshing/CMakeLists.txt b/libsrc/meshing/CMakeLists.txt
index e9e6e21..cd73025 100644
--- a/libsrc/meshing/CMakeLists.txt
+++ b/libsrc/meshing/CMakeLists.txt
@@ -30,7 +30,10 @@ if(APPLE)
 endif(APPLE)
 
 if(NOT WIN32)
-    target_link_libraries( mesh ${ZLIB_LIBRARIES} ${MPI_CXX_LIBRARIES} ${PYTHON_LIBRARIES} ${METIS_LIBRARY})
+    target_link_libraries( mesh PUBLIC ${ZLIB_LIBRARIES} ${MPI_CXX_LIBRARIES} ${METIS_LIBRARY})
+    if(DYNAMIC_LINK_PYTHON)
+      target_link_libraries(mesh PUBLIC ${PYTHON_LIBRARIES}) 
+    endif(DYNAMIC_LINK_PYTHON)
     install( TARGETS mesh ${NG_INSTALL_DIR})
 endif(NOT WIN32)
 
diff --git a/libsrc/occ/CMakeLists.txt b/libsrc/occ/CMakeLists.txt
index 2f10e54..20839f1 100644
--- a/libsrc/occ/CMakeLists.txt
+++ b/libsrc/occ/CMakeLists.txt
@@ -5,12 +5,20 @@ add_library(occ ${NG_LIB_TYPE}
         occconstruction.cpp occgenmesh.cpp occgeom.cpp occmeshsurf.cpp python_occ.cpp
         )
 
-add_library(occvis ${NG_LIB_TYPE} vsocc.cpp)
+if(USE_GUI)
+        add_library(occvis ${NG_LIB_TYPE} vsocc.cpp)
+endif(USE_GUI)
 
 if(NOT WIN32)
-    target_link_libraries( occ ${OCC_LIBRARIES} ${PYTHON_LIBRARIES})
-    target_link_libraries( occvis occ )
-    install( TARGETS occ occvis ${NG_INSTALL_DIR})
+    target_link_libraries( occ PUBLIC ${OCC_LIBRARIES})
+    if(DYNAMIC_LINK_PYTHON)
+        target_link_libraries(occ PUBLIC ${PYTHON_LIBRARIES}) 
+    endif(DYNAMIC_LINK_PYTHON)
+    install( TARGETS occ ${NG_INSTALL_DIR})
+    if (USE_GUI)
+        target_link_libraries( occvis occ )
+        install( TARGETS occvis ${NG_INSTALL_DIR})
+    endif(USE_GUI)
 endif(NOT WIN32)
 
 install(FILES
diff --git a/libsrc/stlgeom/CMakeLists.txt b/libsrc/stlgeom/CMakeLists.txt
index 3620c49..df19783 100644
--- a/libsrc/stlgeom/CMakeLists.txt
+++ b/libsrc/stlgeom/CMakeLists.txt
@@ -4,8 +4,10 @@ add_library(stl ${NG_LIB_TYPE}
         )
 
 if(NOT WIN32)
-    target_link_libraries( stl mesh  ${PYTHON_LIBRARIES})
-    target_link_libraries( stl ${PYTHON_LIBRARIES})
+    target_link_libraries( stl mesh)
+    if(DYNAMIC_LINK_PYTHON)
+        target_link_libraries( stl ${PYTHON_LIBRARIES})
+    endif(DYNAMIC_LINK_PYTHON)
     install( TARGETS stl ${NG_INSTALL_DIR})
 endif(NOT WIN32)
 
diff --git a/libsrc/visualization/CMakeLists.txt b/libsrc/visualization/CMakeLists.txt
index 8f803d9..cd6057d 100644
--- a/libsrc/visualization/CMakeLists.txt
+++ b/libsrc/visualization/CMakeLists.txt
@@ -10,7 +10,10 @@ endif(USE_GUI)
 add_library(visual ${NG_LIB_TYPE} ${LIB_VISUAL_SOURCES})
 
 if(NOT WIN32)
-    target_link_libraries( visual ${PYTHON_LIBRARIES} ${MPI_CXX_LIBRARIES} ${OPENGL_LIBRARIES} )
+    target_link_libraries( visual ${MPI_CXX_LIBRARIES} ${OPENGL_LIBRARIES} )
+	if(DYNAMIC_LINK_PYTHON)
+    	target_link_libraries( visual ${PYTHON_LIBRARIES})
+	endif(DYNAMIC_LINK_PYTHON)
     install( TARGETS visual ${NG_INSTALL_DIR})
 endif(NOT WIN32)
 
diff --git a/nglib/CMakeLists.txt b/nglib/CMakeLists.txt
index cf5e192..9bc03e3 100644
--- a/nglib/CMakeLists.txt
+++ b/nglib/CMakeLists.txt
@@ -38,9 +38,9 @@ if(USE_OCC AND NOT WIN32)
     target_link_libraries(nglib occ)
 endif(USE_OCC AND NOT WIN32)
 
-if(USE_PYTHON)
+if(USE_PYTHON AND DYNAMIC_LINK_PYTHON)
     target_link_libraries(nglib ${PYTHON_LIBRARIES})
-endif(USE_PYTHON)
+endif(USE_PYTHON AND DYNAMIC_LINK_PYTHON)
 
 install(TARGETS nglib ${NG_INSTALL_DIR})
 install(FILES nglib.h DESTINATION ${NG_INSTALL_DIR_INCLUDE} COMPONENT netgen_devel)
