diff --git a/CMakeLists.txt b/CMakeLists.txt
index db13de81..2f46fcee 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -35,15 +35,15 @@ option( USE_SUPERBUILD       "use ccache" ON)
 
 set(CMAKE_MODULE_PATH "${CMAKE_MODULE_PATH}" "${CMAKE_CURRENT_SOURCE_DIR}/cmake/cmake_modules")
 
-if(APPLE)
+if(APPLE AND NOT BUILD_FOR_CONDA)
   set(INSTALL_DIR_DEFAULT /Applications/Netgen.app)
-else(APPLE)
+else(APPLE AND NOT BUILD_FOR_CONDA)
   if(WIN32)
     set(INSTALL_DIR_DEFAULT "C:/netgen")
   else(WIN32)
     set(INSTALL_DIR_DEFAULT /opt/netgen)
   endif(WIN32)
-endif(APPLE)
+endif(APPLE AND NOT BUILD_FOR_CONDA)
 
 if(INSTALL_DIR)
   message(WARNING "INSTALL_DIR is deprecated, use CMAKE_INSTALL_PREFIX instead")
@@ -119,13 +119,13 @@ if(USE_PYTHON)
     find_package(PythonInterp 3 REQUIRED)
     find_package(PythonLibs 3 REQUIRED)
 
-    execute_process(COMMAND ${PYTHON_EXECUTABLE} -c "from distutils.sysconfig import get_python_lib; print(get_python_lib(1,0,''))" OUTPUT_VARIABLE PYTHON_PACKAGES_INSTALL_DIR OUTPUT_STRIP_TRAILING_WHITESPACE)
+    execute_process(COMMAND ${PYTHON_EXECUTABLE} -c "from distutils.sysconfig import get_python_lib; print(get_python_lib())" OUTPUT_VARIABLE PYTHON_PACKAGES_INSTALL_DIR OUTPUT_STRIP_TRAILING_WHITESPACE)
     file(TO_CMAKE_PATH ${PYTHON_PACKAGES_INSTALL_DIR} PYTHON_PACKAGES_INSTALL_DIR)
 endif(USE_PYTHON)
 
 set(NG_INSTALL_SUFFIX netgen CACHE STRING "Suffix appended to install directories (project name)")
 
-if(APPLE)
+if(APPLE AND NOT BUILD_FOR_CONDA)
   set(NG_INSTALL_DIR_BIN_DEFAULT Contents/MacOS)
   set(NG_INSTALL_DIR_LIB_DEFAULT Contents/MacOS)
   set(NG_INSTALL_DIR_CMAKE_DEFAULT Contents/Resources/CMake)
@@ -134,7 +134,7 @@ if(APPLE)
   set(NG_INSTALL_DIR_INCLUDE_DEFAULT Contents/Resources/include)
 
   set(NG_RPATH_TOKEN "@loader_path")
-else(APPLE)
+else(APPLE AND NOT BUILD_FOR_CONDA)
   set(NG_INSTALL_DIR_BIN_DEFAULT bin)
   set(NG_INSTALL_DIR_LIB_DEFAULT lib)
   if(WIN32)
@@ -147,7 +147,7 @@ else(APPLE)
   set(NG_INSTALL_DIR_INCLUDE_DEFAULT include)
 
   set(NG_RPATH_TOKEN "\$ORIGIN")
-endif(APPLE)
+endif(APPLE AND NOT BUILD_FOR_CONDA)
 
 set(NG_INSTALL_DIR_PYTHON ${NG_INSTALL_DIR_PYTHON_DEFAULT} CACHE STRING "Install directory for Python files")
 set(NG_INSTALL_DIR_BIN ${NG_INSTALL_DIR_BIN_DEFAULT} CACHE STRING "Install directory for executables")
@@ -264,16 +264,21 @@ else()
 endif()
 
 if (USE_PYTHON)
-    add_subdirectory(external_dependencies/pybind11)
-    find_path(PYBIND_INCLUDE_DIR pybind11/pybind11.h HINTS ${PYTHON_INCLUDE_DIR})
-    if( PYBIND_INCLUDE_DIR )
-        message(STATUS "Found Pybind11: ${PYBIND_INCLUDE_DIR}")
-    else( PYBIND_INCLUDE_DIR )
-        message(FATAL_ERROR "Could NOT find pybind11!")
-    endif( PYBIND_INCLUDE_DIR )
+    if(BUILD_FOR_CONDA)
+        find_package(pybind11 REQUIRED)
+        set(PYBIND_INCLUDE_DIR ${pybind11_INCLUDE_DIR})
+    else(BUILD_FOR_CONDA)
+      add_subdirectory(external_dependencies/pybind11)
+      find_path(PYBIND_INCLUDE_DIR pybind11/pybind11.h HINTS ${PYTHON_INCLUDE_DIR})
+      if( PYBIND_INCLUDE_DIR )
+          message(STATUS "Found Pybind11: ${PYBIND_INCLUDE_DIR}")
+      else( PYBIND_INCLUDE_DIR )
+          message(FATAL_ERROR "Could NOT find pybind11!")
+      endif( PYBIND_INCLUDE_DIR )
+    endif(BUILD_FOR_CONDA)
 
     target_include_directories(netgen_python INTERFACE ${PYBIND_INCLUDE_DIR} ${PYTHON_INCLUDE_DIRS})
-    if(NOT ${BUILD_FOR_CONDA})
+    if(NOT ${BUILD_FOR_CONDA} OR WIN32)
         # Don't link python libraries in conda environments
         target_link_libraries(netgen_python INTERFACE ${PYTHON_LIBRARIES})
     endif()
@@ -506,7 +511,7 @@ if(UNIX)
     endif(temp)
 endif(UNIX)
 
-if(APPLE)
+if(APPLE AND NOT BUILD_FOR_CONDA)
     # create some auxiliary files
     set(mac_startup ${CMAKE_CURRENT_BINARY_DIR}/startup.sh)
     file(WRITE ${mac_startup} "\
@@ -551,9 +556,9 @@ open -a /Applications/Utilities/Terminal.app $Netgen_MACOS/startup.sh || open -a
     install(FILES ${mac_plist} DESTINATION ${NG_INSTALL_DIR_BIN}/../)
     install(FILES ${CMAKE_CURRENT_SOURCE_DIR}/netgen.icns DESTINATION ${NG_INSTALL_DIR_RES}/../ RENAME Netgen.icns)
 
-endif(APPLE)
+endif(APPLE AND NOT BUILD_FOR_CONDA)
 
-if(NOT APPLE)
+if(NOT APPLE AND NOT BUILD_FOR_CONDA)
   include(CPack) 
 endif()
 
diff --git a/ng/CMakeLists.txt b/ng/CMakeLists.txt
index 82d8ea91..7a7017ef 100644
--- a/ng/CMakeLists.txt
+++ b/ng/CMakeLists.txt
@@ -52,7 +52,7 @@ endif(USE_GUI)
 
 if(USE_PYTHON)
     if(USE_GUI)
-        if(${BUILD_FOR_CONDA} AND UNIX AND NOT APPLE)
+        if(NOT BUILD_FOR_CONDA OR WIN32)
             target_link_libraries( netgen -Wl,--no-as-needed ${PYTHON_LIBRARIES})
         elseif()
             target_link_libraries( netgen ${PYTHON_LIBRARIES})
diff --git a/nglib/CMakeLists.txt b/nglib/CMakeLists.txt
index a7765e59..91daef37 100644
--- a/nglib/CMakeLists.txt
+++ b/nglib/CMakeLists.txt
@@ -37,9 +37,9 @@ if(USE_OCC AND NOT WIN32)
     target_link_libraries(nglib PUBLIC occ)
 endif(USE_OCC AND NOT WIN32)
 
-if(USE_PYTHON)
+if(NOT BUILD_FOR_CONDA OR WIN32)
     target_link_libraries(nglib PRIVATE ${PYTHON_LIBRARIES})
-endif(USE_PYTHON)
+endif()
 
 install(TARGETS nglib ${NG_INSTALL_DIR})
 install(FILES nglib.h DESTINATION ${NG_INSTALL_DIR_INCLUDE} COMPONENT netgen_devel)
